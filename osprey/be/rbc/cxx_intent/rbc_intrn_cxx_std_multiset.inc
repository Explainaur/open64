/*
 * Copyright (C) 2019-2022 Xcalibyte (Shenzhen) Limited.
 */


/* auto-generated intrinsics for c++ std_multiset intrinsic. 2021-10-26 11:56:57 */

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::begin() */
#ifdef DECL_RBC_for_ZNSt3__18multiset5beginEv
void _ZNSt3__18multiset5beginEv()
{
  DECL_RBC_for_ZNSt3__18multiset5beginEv();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::begin() */
#ifdef DECL_RBC_for_ZNKSt3__18multiset5beginEv
void _ZNKSt3__18multiset5beginEv()
{
  DECL_RBC_for_ZNKSt3__18multiset5beginEv();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::end() */
#ifdef DECL_RBC_for_ZNSt3__18multiset3endEv
void _ZNSt3__18multiset3endEv()
{
  DECL_RBC_for_ZNSt3__18multiset3endEv();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::end() */
#ifdef DECL_RBC_for_ZNKSt3__18multiset3endEv
void _ZNKSt3__18multiset3endEv()
{
  DECL_RBC_for_ZNKSt3__18multiset3endEv();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::rbegin() */
#ifdef DECL_RBC_for_ZNSt3__18multiset6rbeginEv
void _ZNSt3__18multiset6rbeginEv()
{
  DECL_RBC_for_ZNSt3__18multiset6rbeginEv();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::rbegin() */
#ifdef DECL_RBC_for_ZNKSt3__18multiset6rbeginEv
void _ZNKSt3__18multiset6rbeginEv()
{
  DECL_RBC_for_ZNKSt3__18multiset6rbeginEv();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::rend() */
#ifdef DECL_RBC_for_ZNSt3__18multiset4rendEv
void _ZNSt3__18multiset4rendEv()
{
  DECL_RBC_for_ZNSt3__18multiset4rendEv();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::rend() */
#ifdef DECL_RBC_for_ZNKSt3__18multiset4rendEv
void _ZNKSt3__18multiset4rendEv()
{
  DECL_RBC_for_ZNKSt3__18multiset4rendEv();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::empty() */
#ifdef DECL_RBC_for_ZNKSt3__18multiset5emptyEv
void _ZNKSt3__18multiset5emptyEv()
{
  DECL_RBC_for_ZNKSt3__18multiset5emptyEv();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::size() */
#ifdef DECL_RBC_for_ZNKSt3__18multiset4sizeEv
void _ZNKSt3__18multiset4sizeEv()
{
  DECL_RBC_for_ZNKSt3__18multiset4sizeEv();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::max_size() */
#ifdef DECL_RBC_for_ZNKSt3__18multiset8max_sizeEv
void _ZNKSt3__18multiset8max_sizeEv()
{
  DECL_RBC_for_ZNKSt3__18multiset8max_sizeEv();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::insert(const std::__1::multiset::value_type & __v) */
#ifdef DECL_RBC_for_ZNSt3__18multiset6insertERKT_
void _ZNSt3__18multiset6insertERKT_()
{
  DECL_RBC_for_ZNSt3__18multiset6insertERKT_();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::insert(std::__1::multiset::const_iterator __p, const std::__1::multiset::value_type & __v) */
#ifdef DECL_RBC_for_ZNSt3__18multiset6insertENS_6__treeIT_T0_T1_E14const_iteratorERKS2_
void _ZNSt3__18multiset6insertENS_6__treeIT_T0_T1_E14const_iteratorERKS2_()
{
  DECL_RBC_for_ZNSt3__18multiset6insertENS_6__treeIT_T0_T1_E14const_iteratorERKS2_();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::insert<typename _InputIterator>(_InputIterator __f, _InputIterator __l) */
#ifdef DECL_RBC_for_ZNSt3__18multiset6insertETL0__S1_
void _ZNSt3__18multiset6insertETL0__S1_()
{
  DECL_RBC_for_ZNSt3__18multiset6insertETL0__S1_();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::insert(std::__1::multiset::value_type && __v) */
#ifdef DECL_RBC_for_ZNSt3__18multiset6insertEOT_
void _ZNSt3__18multiset6insertEOT_()
{
  DECL_RBC_for_ZNSt3__18multiset6insertEOT_();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::insert(std::__1::multiset::const_iterator __p, std::__1::multiset::value_type && __v) */
#ifdef DECL_RBC_for_ZNSt3__18multiset6insertENS_6__treeIT_T0_T1_E14const_iteratorEOS2_
void _ZNSt3__18multiset6insertENS_6__treeIT_T0_T1_E14const_iteratorEOS2_()
{
  DECL_RBC_for_ZNSt3__18multiset6insertENS_6__treeIT_T0_T1_E14const_iteratorEOS2_();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::insert(initializer_list<std::__1::multiset::value_type> __il) */
#ifdef DECL_RBC_for_ZNSt3__18multiset6insertESt16initializer_listIT_E
void _ZNSt3__18multiset6insertESt16initializer_listIT_E()
{
  DECL_RBC_for_ZNSt3__18multiset6insertESt16initializer_listIT_E();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::erase(std::__1::multiset::const_iterator __p) */
#ifdef DECL_RBC_for_ZNSt3__18multiset5eraseENS_6__treeIT_T0_T1_E14const_iteratorE
void _ZNSt3__18multiset5eraseENS_6__treeIT_T0_T1_E14const_iteratorE()
{
  DECL_RBC_for_ZNSt3__18multiset5eraseENS_6__treeIT_T0_T1_E14const_iteratorE();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::erase(const std::__1::multiset::key_type & __k) */
#ifdef DECL_RBC_for_ZNSt3__18multiset5eraseERKT_
void _ZNSt3__18multiset5eraseERKT_()
{
  DECL_RBC_for_ZNSt3__18multiset5eraseERKT_();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::erase(std::__1::multiset::const_iterator __f, std::__1::multiset::const_iterator __l) */
#ifdef DECL_RBC_for_ZNSt3__18multiset5eraseENS_6__treeIT_T0_T1_E14const_iteratorES6_
void _ZNSt3__18multiset5eraseENS_6__treeIT_T0_T1_E14const_iteratorES6_()
{
  DECL_RBC_for_ZNSt3__18multiset5eraseENS_6__treeIT_T0_T1_E14const_iteratorES6_();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::clear() */
#ifdef DECL_RBC_for_ZNSt3__18multiset5clearEv
void _ZNSt3__18multiset5clearEv()
{
  DECL_RBC_for_ZNSt3__18multiset5clearEv();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::swap(multiset<_Key, _Compare, _Allocator> & __s) */
#ifdef DECL_RBC_for_ZNSt3__18multiset4swapERNS_8multisetIT_T0_T1_EE
void _ZNSt3__18multiset4swapERNS_8multisetIT_T0_T1_EE()
{
  DECL_RBC_for_ZNSt3__18multiset4swapERNS_8multisetIT_T0_T1_EE();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::get_allocator() */
#ifdef DECL_RBC_for_ZNKSt3__18multiset13get_allocatorEv
void _ZNKSt3__18multiset13get_allocatorEv()
{
  DECL_RBC_for_ZNKSt3__18multiset13get_allocatorEv();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::key_comp() */
#ifdef DECL_RBC_for_ZNKSt3__18multiset8key_compEv
void _ZNKSt3__18multiset8key_compEv()
{
  DECL_RBC_for_ZNKSt3__18multiset8key_compEv();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::value_comp() */
#ifdef DECL_RBC_for_ZNKSt3__18multiset10value_compEv
void _ZNKSt3__18multiset10value_compEv()
{
  DECL_RBC_for_ZNKSt3__18multiset10value_compEv();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::find(const std::__1::multiset::key_type & __k) */
#ifdef DECL_RBC_for_ZNSt3__18multiset4findERKT_
void _ZNSt3__18multiset4findERKT_()
{
  DECL_RBC_for_ZNSt3__18multiset4findERKT_();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::find(const std::__1::multiset::key_type & __k) */
#ifdef DECL_RBC_for_ZNKSt3__18multiset4findERKT_
void _ZNKSt3__18multiset4findERKT_()
{
  DECL_RBC_for_ZNKSt3__18multiset4findERKT_();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::find<typename _K2>(const _K2 & __k) */
#ifdef DECL_RBC_for_ZNSt3__18multiset4findERKTL0__
void _ZNSt3__18multiset4findERKTL0__()
{
  DECL_RBC_for_ZNSt3__18multiset4findERKTL0__();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::find<typename _K2>(const _K2 & __k) */
#ifdef DECL_RBC_for_ZNKSt3__18multiset4findERKTL0__
void _ZNKSt3__18multiset4findERKTL0__()
{
  DECL_RBC_for_ZNKSt3__18multiset4findERKTL0__();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::count(const std::__1::multiset::key_type & __k) */
#ifdef DECL_RBC_for_ZNKSt3__18multiset5countERKT_
void _ZNKSt3__18multiset5countERKT_()
{
  DECL_RBC_for_ZNKSt3__18multiset5countERKT_();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::count<typename _K2>(const _K2 & __k) */
#ifdef DECL_RBC_for_ZNKSt3__18multiset5countERKTL0__
void _ZNKSt3__18multiset5countERKTL0__()
{
  DECL_RBC_for_ZNKSt3__18multiset5countERKTL0__();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::lower_bound(const std::__1::multiset::key_type & __k) */
#ifdef DECL_RBC_for_ZNSt3__18multiset11lower_boundERKT_
void _ZNSt3__18multiset11lower_boundERKT_()
{
  DECL_RBC_for_ZNSt3__18multiset11lower_boundERKT_();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::lower_bound(const std::__1::multiset::key_type & __k) */
#ifdef DECL_RBC_for_ZNKSt3__18multiset11lower_boundERKT_
void _ZNKSt3__18multiset11lower_boundERKT_()
{
  DECL_RBC_for_ZNKSt3__18multiset11lower_boundERKT_();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::lower_bound<typename _K2>(const _K2 & __k) */
#ifdef DECL_RBC_for_ZNSt3__18multiset11lower_boundERKTL0__
void _ZNSt3__18multiset11lower_boundERKTL0__()
{
  DECL_RBC_for_ZNSt3__18multiset11lower_boundERKTL0__();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::lower_bound<typename _K2>(const _K2 & __k) */
#ifdef DECL_RBC_for_ZNKSt3__18multiset11lower_boundERKTL0__
void _ZNKSt3__18multiset11lower_boundERKTL0__()
{
  DECL_RBC_for_ZNKSt3__18multiset11lower_boundERKTL0__();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::upper_bound(const std::__1::multiset::key_type & __k) */
#ifdef DECL_RBC_for_ZNSt3__18multiset11upper_boundERKT_
void _ZNSt3__18multiset11upper_boundERKT_()
{
  DECL_RBC_for_ZNSt3__18multiset11upper_boundERKT_();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::upper_bound(const std::__1::multiset::key_type & __k) */
#ifdef DECL_RBC_for_ZNKSt3__18multiset11upper_boundERKT_
void _ZNKSt3__18multiset11upper_boundERKT_()
{
  DECL_RBC_for_ZNKSt3__18multiset11upper_boundERKT_();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::upper_bound<typename _K2>(const _K2 & __k) */
#ifdef DECL_RBC_for_ZNSt3__18multiset11upper_boundERKTL0__
void _ZNSt3__18multiset11upper_boundERKTL0__()
{
  DECL_RBC_for_ZNSt3__18multiset11upper_boundERKTL0__();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::upper_bound<typename _K2>(const _K2 & __k) */
#ifdef DECL_RBC_for_ZNKSt3__18multiset11upper_boundERKTL0__
void _ZNKSt3__18multiset11upper_boundERKTL0__()
{
  DECL_RBC_for_ZNKSt3__18multiset11upper_boundERKTL0__();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::equal_range(const std::__1::multiset::key_type & __k) */
#ifdef DECL_RBC_for_ZNSt3__18multiset11equal_rangeERKT_
void _ZNSt3__18multiset11equal_rangeERKT_()
{
  DECL_RBC_for_ZNSt3__18multiset11equal_rangeERKT_();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::equal_range(const std::__1::multiset::key_type & __k) */
#ifdef DECL_RBC_for_ZNKSt3__18multiset11equal_rangeERKT_
void _ZNKSt3__18multiset11equal_rangeERKT_()
{
  DECL_RBC_for_ZNKSt3__18multiset11equal_rangeERKT_();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::equal_range<typename _K2>(const _K2 & __k) */
#ifdef DECL_RBC_for_ZNSt3__18multiset11equal_rangeERKTL0__
void _ZNSt3__18multiset11equal_rangeERKTL0__()
{
  DECL_RBC_for_ZNSt3__18multiset11equal_rangeERKTL0__();
}
#endif

/* std::__1::multiset<typename _Key, typename _Compare, typename _Allocator>::equal_range<typename _K2>(const _K2 & __k) */
#ifdef DECL_RBC_for_ZNKSt3__18multiset11equal_rangeERKTL0__
void _ZNKSt3__18multiset11equal_rangeERKTL0__()
{
  DECL_RBC_for_ZNKSt3__18multiset11equal_rangeERKTL0__();
}
#endif

/* end */
