/*
  Copyright (C) 2021 Xcalibyte (Shenzhen) Limited.

  This program is free software; you can redistribute it and/or modify it
  under the terms of version 2 of the GNU General Public License as
  published by the Free Software Foundation.

  This program is distributed in the hope that it would be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  Further, this software is distributed without any warranty that it is
  free of the rightful claim of any third person regarding infringement
  or the like.  Any license provided herein, whether implied or
  otherwise, applies only to this software file.  Patent licenses, if
  any, provided herein do not apply to combinations of this program with
  other software, or any other product whatsoever.

  You should have received a copy of the GNU General Public License along
  with this program; if not, write the Free Software Foundation, Inc., 59
  Temple Place - Suite 330, Boston MA 02111-1307, USA.

  http://www.xcalibyte.com

  For more information, see:
  http://github.com/open64-compiler/open64
  http://gitee.com/open64-compiler/open64

*/


/* auto-generated intrinsics for c++ std_unordered_set intrinsic. 2021-10-26 11:57:12 */

  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::get_allocator() */
  if (strcmp("_ZNKSt3__113unordered_set13get_allocatorEv", fname) == 0) { return INTRN__ZNKSt3__113unordered_set13get_allocatorEv; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::empty() */
  if (strcmp("_ZNKSt3__113unordered_set5emptyEv", fname) == 0) { return INTRN__ZNKSt3__113unordered_set5emptyEv; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::size() */
  if (strcmp("_ZNKSt3__113unordered_set4sizeEv", fname) == 0) { return INTRN__ZNKSt3__113unordered_set4sizeEv; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::max_size() */
  if (strcmp("_ZNKSt3__113unordered_set8max_sizeEv", fname) == 0) { return INTRN__ZNKSt3__113unordered_set8max_sizeEv; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::begin() */
  if (strcmp("_ZNSt3__113unordered_set5beginEv", fname) == 0) { return INTRN__ZNSt3__113unordered_set5beginEv; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::end() */
  if (strcmp("_ZNSt3__113unordered_set3endEv", fname) == 0) { return INTRN__ZNSt3__113unordered_set3endEv; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::begin() */
  if (strcmp("_ZNKSt3__113unordered_set5beginEv", fname) == 0) { return INTRN__ZNKSt3__113unordered_set5beginEv; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::end() */
  if (strcmp("_ZNKSt3__113unordered_set3endEv", fname) == 0) { return INTRN__ZNKSt3__113unordered_set3endEv; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::insert(std::__1::unordered_set::value_type && __x) */
  if (strcmp("_ZNSt3__113unordered_set6insertEOT_", fname) == 0) { return INTRN__ZNSt3__113unordered_set6insertEOT_; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::insert(std::__1::unordered_set::const_iterator , std::__1::unordered_set::value_type && __x) */
  if (strcmp("_ZNSt3__113unordered_set6insertENS_12__hash_tableIT_T0_T1_T2_E14const_iteratorEOS2_", fname) == 0) { return INTRN__ZNSt3__113unordered_set6insertENS_12__hash_tableIT_T0_T1_T2_E14const_iteratorEOS2_; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::insert(initializer_list<std::__1::unordered_set::value_type> __il) */
  if (strcmp("_ZNSt3__113unordered_set6insertESt16initializer_listIT_E", fname) == 0) { return INTRN__ZNSt3__113unordered_set6insertESt16initializer_listIT_E; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::insert(const std::__1::unordered_set::value_type & __x) */
  if (strcmp("_ZNSt3__113unordered_set6insertERKT_", fname) == 0) { return INTRN__ZNSt3__113unordered_set6insertERKT_; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::insert(std::__1::unordered_set::const_iterator , const std::__1::unordered_set::value_type & __x) */
  if (strcmp("_ZNSt3__113unordered_set6insertENS_12__hash_tableIT_T0_T1_T2_E14const_iteratorERKS2_", fname) == 0) { return INTRN__ZNSt3__113unordered_set6insertENS_12__hash_tableIT_T0_T1_T2_E14const_iteratorERKS2_; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::insert<typename _InputIterator>(_InputIterator __first, _InputIterator __last) */
  if (strcmp("_ZNSt3__113unordered_set6insertETL0__S1_", fname) == 0) { return INTRN__ZNSt3__113unordered_set6insertETL0__S1_; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::erase(std::__1::unordered_set::const_iterator __p) */
  if (strcmp("_ZNSt3__113unordered_set5eraseENS_12__hash_tableIT_T0_T1_T2_E14const_iteratorE", fname) == 0) { return INTRN__ZNSt3__113unordered_set5eraseENS_12__hash_tableIT_T0_T1_T2_E14const_iteratorE; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::erase(const std::__1::unordered_set::key_type & __k) */
  if (strcmp("_ZNSt3__113unordered_set5eraseERKT_", fname) == 0) { return INTRN__ZNSt3__113unordered_set5eraseERKT_; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::erase(std::__1::unordered_set::const_iterator __first, std::__1::unordered_set::const_iterator __last) */
  if (strcmp("_ZNSt3__113unordered_set5eraseENS_12__hash_tableIT_T0_T1_T2_E14const_iteratorES7_", fname) == 0) { return INTRN__ZNSt3__113unordered_set5eraseENS_12__hash_tableIT_T0_T1_T2_E14const_iteratorES7_; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::clear() */
  if (strcmp("_ZNSt3__113unordered_set5clearEv", fname) == 0) { return INTRN__ZNSt3__113unordered_set5clearEv; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::swap(unordered_set<_Value, _Hash, _Pred, _Alloc> & __u) */
  if (strcmp("_ZNSt3__113unordered_set4swapERNS_13unordered_setIT_T0_T1_T2_EE", fname) == 0) { return INTRN__ZNSt3__113unordered_set4swapERNS_13unordered_setIT_T0_T1_T2_EE; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::hash_function() */
  if (strcmp("_ZNKSt3__113unordered_set13hash_functionEv", fname) == 0) { return INTRN__ZNKSt3__113unordered_set13hash_functionEv; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::key_eq() */
  if (strcmp("_ZNKSt3__113unordered_set6key_eqEv", fname) == 0) { return INTRN__ZNKSt3__113unordered_set6key_eqEv; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::find(const std::__1::unordered_set::key_type & __k) */
  if (strcmp("_ZNSt3__113unordered_set4findERKT_", fname) == 0) { return INTRN__ZNSt3__113unordered_set4findERKT_; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::find(const std::__1::unordered_set::key_type & __k) */
  if (strcmp("_ZNKSt3__113unordered_set4findERKT_", fname) == 0) { return INTRN__ZNKSt3__113unordered_set4findERKT_; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::count(const std::__1::unordered_set::key_type & __k) */
  if (strcmp("_ZNKSt3__113unordered_set5countERKT_", fname) == 0) { return INTRN__ZNKSt3__113unordered_set5countERKT_; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::equal_range(const std::__1::unordered_set::key_type & __k) */
  if (strcmp("_ZNSt3__113unordered_set11equal_rangeERKT_", fname) == 0) { return INTRN__ZNSt3__113unordered_set11equal_rangeERKT_; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::equal_range(const std::__1::unordered_set::key_type & __k) */
  if (strcmp("_ZNKSt3__113unordered_set11equal_rangeERKT_", fname) == 0) { return INTRN__ZNKSt3__113unordered_set11equal_rangeERKT_; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::bucket_count() */
  if (strcmp("_ZNKSt3__113unordered_set12bucket_countEv", fname) == 0) { return INTRN__ZNKSt3__113unordered_set12bucket_countEv; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::max_bucket_count() */
  if (strcmp("_ZNKSt3__113unordered_set16max_bucket_countEv", fname) == 0) { return INTRN__ZNKSt3__113unordered_set16max_bucket_countEv; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::bucket_size(std::__1::unordered_set::size_type __n) */
  if (strcmp("_ZNKSt3__113unordered_set11bucket_sizeENS_12__hash_tableIT_T0_T1_T2_E9size_typeE", fname) == 0) { return INTRN__ZNKSt3__113unordered_set11bucket_sizeENS_12__hash_tableIT_T0_T1_T2_E9size_typeE; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::bucket(const std::__1::unordered_set::key_type & __k) */
  if (strcmp("_ZNKSt3__113unordered_set6bucketERKT_", fname) == 0) { return INTRN__ZNKSt3__113unordered_set6bucketERKT_; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::begin(std::__1::unordered_set::size_type __n) */
  if (strcmp("_ZNSt3__113unordered_set5beginENS_12__hash_tableIT_T0_T1_T2_E9size_typeE", fname) == 0) { return INTRN__ZNSt3__113unordered_set5beginENS_12__hash_tableIT_T0_T1_T2_E9size_typeE; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::end(std::__1::unordered_set::size_type __n) */
  if (strcmp("_ZNSt3__113unordered_set3endENS_12__hash_tableIT_T0_T1_T2_E9size_typeE", fname) == 0) { return INTRN__ZNSt3__113unordered_set3endENS_12__hash_tableIT_T0_T1_T2_E9size_typeE; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::begin(std::__1::unordered_set::size_type __n) */
  if (strcmp("_ZNKSt3__113unordered_set5beginENS_12__hash_tableIT_T0_T1_T2_E9size_typeE", fname) == 0) { return INTRN__ZNKSt3__113unordered_set5beginENS_12__hash_tableIT_T0_T1_T2_E9size_typeE; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::end(std::__1::unordered_set::size_type __n) */
  if (strcmp("_ZNKSt3__113unordered_set3endENS_12__hash_tableIT_T0_T1_T2_E9size_typeE", fname) == 0) { return INTRN__ZNKSt3__113unordered_set3endENS_12__hash_tableIT_T0_T1_T2_E9size_typeE; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::load_factor() */
  if (strcmp("_ZNKSt3__113unordered_set11load_factorEv", fname) == 0) { return INTRN__ZNKSt3__113unordered_set11load_factorEv; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::max_load_factor() */
  if (strcmp("_ZNKSt3__113unordered_set15max_load_factorEv", fname) == 0) { return INTRN__ZNKSt3__113unordered_set15max_load_factorEv; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::max_load_factor(float __mlf) */
  if (strcmp("_ZNSt3__113unordered_set15max_load_factorEf", fname) == 0) { return INTRN__ZNSt3__113unordered_set15max_load_factorEf; }
  /* std::__1::unordered_set<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::rehash(std::__1::unordered_set::size_type __n) */
  if (strcmp("_ZNSt3__113unordered_set6rehashENS_12__hash_tableIT_T0_T1_T2_E9size_typeE", fname) == 0) { return INTRN__ZNSt3__113unordered_set6rehashENS_12__hash_tableIT_T0_T1_T2_E9size_typeE; }
/* end */
