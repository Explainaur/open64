/*
  Copyright (C) 2021 Xcalibyte (Shenzhen) Limited.

  This program is free software; you can redistribute it and/or modify it
  under the terms of version 2 of the GNU General Public License as
  published by the Free Software Foundation.

  This program is distributed in the hope that it would be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  Further, this software is distributed without any warranty that it is
  free of the rightful claim of any third person regarding infringement
  or the like.  Any license provided herein, whether implied or
  otherwise, applies only to this software file.  Patent licenses, if
  any, provided herein do not apply to combinations of this program with
  other software, or any other product whatsoever.

  You should have received a copy of the GNU General Public License along
  with this program; if not, write the Free Software Foundation, Inc., 59
  Temple Place - Suite 330, Boston MA 02111-1307, USA.

  http://www.xcalibyte.com

  For more information, see:
  http://github.com/open64-compiler/open64
  http://gitee.com/open64-compiler/open64

*/


/* auto-generated intrinsics for c++ gnu_hash_map intrinsic. 2021-10-26 11:57:17 */

  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::get_allocator() */
  if (strcmp("_ZNK9__gnu_cxx8hash_map13get_allocatorEv", fname) == 0) { return INTRN__ZNK9__gnu_cxx8hash_map13get_allocatorEv; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::empty() */
  if (strcmp("_ZNK9__gnu_cxx8hash_map5emptyEv", fname) == 0) { return INTRN__ZNK9__gnu_cxx8hash_map5emptyEv; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::size() */
  if (strcmp("_ZNK9__gnu_cxx8hash_map4sizeEv", fname) == 0) { return INTRN__ZNK9__gnu_cxx8hash_map4sizeEv; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::max_size() */
  if (strcmp("_ZNK9__gnu_cxx8hash_map8max_sizeEv", fname) == 0) { return INTRN__ZNK9__gnu_cxx8hash_map8max_sizeEv; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::begin() */
  if (strcmp("_ZN9__gnu_cxx8hash_map5beginEv", fname) == 0) { return INTRN__ZN9__gnu_cxx8hash_map5beginEv; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::end() */
  if (strcmp("_ZN9__gnu_cxx8hash_map3endEv", fname) == 0) { return INTRN__ZN9__gnu_cxx8hash_map3endEv; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::begin() */
  if (strcmp("_ZNK9__gnu_cxx8hash_map5beginEv", fname) == 0) { return INTRN__ZNK9__gnu_cxx8hash_map5beginEv; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::end() */
  if (strcmp("_ZNK9__gnu_cxx8hash_map3endEv", fname) == 0) { return INTRN__ZNK9__gnu_cxx8hash_map3endEv; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::insert(const __gnu_cxx::hash_map::value_type & __x) */
  if (strcmp("_ZN9__gnu_cxx8hash_map6insertERKNSt3__14pairIKT_T0_EE", fname) == 0) { return INTRN__ZN9__gnu_cxx8hash_map6insertERKNSt3__14pairIKT_T0_EE; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::insert(__gnu_cxx::hash_map::const_iterator , const __gnu_cxx::hash_map::value_type & __x) */
  if (strcmp("_ZN9__gnu_cxx8hash_map6insertENS_25__hash_map_const_iteratorINSt3__112__hash_tableINS2_4pairIT_T0_EENS_17__hash_map_hasherIS7_T1_Xaasr8is_emptyIS9_EE5valuentsr17__libcpp_is_finalIS9_EE5valueEEENS_16__hash_map_equalIS7_T2_Xaasr8is_emptyISC_EE5valuentsr17__libcpp_is_finalISC_EE5valueEEENS2_21__rebind_alloc_helperINS2_16allocator_traitsIT3_EES7_E4typeEE14const_iteratorEEERKNS4_IKS5_S6_EE", fname) == 0) { return INTRN__ZN9__gnu_cxx8hash_map6insertENS_25__hash_map_const_iteratorINSt3__112__hash_tableINS2_4pairIT_T0_EENS_17__hash_map_hasherIS7_T1_Xaasr8is_emptyIS9_EE5valuentsr17__libcpp_is_finalIS9_EE5valueEEENS_16__hash_map_equalIS7_T2_Xaasr8is_emptyISC_EE5valuentsr17__libcpp_is_finalISC_EE5valueEEENS2_21__rebind_alloc_helperINS2_16allocator_traitsIT3_EES7_E4typeEE14const_iteratorEEERKNS4_IKS5_S6_EE; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::insert<typename _InputIterator>(_InputIterator __first, _InputIterator __last) */
  if (strcmp("_ZN9__gnu_cxx8hash_map6insertETL0__S1_", fname) == 0) { return INTRN__ZN9__gnu_cxx8hash_map6insertETL0__S1_; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::erase(__gnu_cxx::hash_map::const_iterator __p) */
  if (strcmp("_ZN9__gnu_cxx8hash_map5eraseENS_25__hash_map_const_iteratorINSt3__112__hash_tableINS2_4pairIT_T0_EENS_17__hash_map_hasherIS7_T1_Xaasr8is_emptyIS9_EE5valuentsr17__libcpp_is_finalIS9_EE5valueEEENS_16__hash_map_equalIS7_T2_Xaasr8is_emptyISC_EE5valuentsr17__libcpp_is_finalISC_EE5valueEEENS2_21__rebind_alloc_helperINS2_16allocator_traitsIT3_EES7_E4typeEE14const_iteratorEEE", fname) == 0) { return INTRN__ZN9__gnu_cxx8hash_map5eraseENS_25__hash_map_const_iteratorINSt3__112__hash_tableINS2_4pairIT_T0_EENS_17__hash_map_hasherIS7_T1_Xaasr8is_emptyIS9_EE5valuentsr17__libcpp_is_finalIS9_EE5valueEEENS_16__hash_map_equalIS7_T2_Xaasr8is_emptyISC_EE5valuentsr17__libcpp_is_finalISC_EE5valueEEENS2_21__rebind_alloc_helperINS2_16allocator_traitsIT3_EES7_E4typeEE14const_iteratorEEE; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::erase(const __gnu_cxx::hash_map::key_type & __k) */
  if (strcmp("_ZN9__gnu_cxx8hash_map5eraseERKT_", fname) == 0) { return INTRN__ZN9__gnu_cxx8hash_map5eraseERKT_; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::erase(__gnu_cxx::hash_map::const_iterator __first, __gnu_cxx::hash_map::const_iterator __last) */
  if (strcmp("_ZN9__gnu_cxx8hash_map5eraseENS_25__hash_map_const_iteratorINSt3__112__hash_tableINS2_4pairIT_T0_EENS_17__hash_map_hasherIS7_T1_Xaasr8is_emptyIS9_EE5valuentsr17__libcpp_is_finalIS9_EE5valueEEENS_16__hash_map_equalIS7_T2_Xaasr8is_emptyISC_EE5valuentsr17__libcpp_is_finalISC_EE5valueEEENS2_21__rebind_alloc_helperINS2_16allocator_traitsIT3_EES7_E4typeEE14const_iteratorEEESM_", fname) == 0) { return INTRN__ZN9__gnu_cxx8hash_map5eraseENS_25__hash_map_const_iteratorINSt3__112__hash_tableINS2_4pairIT_T0_EENS_17__hash_map_hasherIS7_T1_Xaasr8is_emptyIS9_EE5valuentsr17__libcpp_is_finalIS9_EE5valueEEENS_16__hash_map_equalIS7_T2_Xaasr8is_emptyISC_EE5valuentsr17__libcpp_is_finalISC_EE5valueEEENS2_21__rebind_alloc_helperINS2_16allocator_traitsIT3_EES7_E4typeEE14const_iteratorEEESM_; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::clear() */
  if (strcmp("_ZN9__gnu_cxx8hash_map5clearEv", fname) == 0) { return INTRN__ZN9__gnu_cxx8hash_map5clearEv; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::swap(hash_map<_Key, _Tp, _Hash, _Pred, _Alloc> & __u) */
  if (strcmp("_ZN9__gnu_cxx8hash_map4swapERNS_8hash_mapIT_T0_T1_T2_T3_EE", fname) == 0) { return INTRN__ZN9__gnu_cxx8hash_map4swapERNS_8hash_mapIT_T0_T1_T2_T3_EE; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::find(const __gnu_cxx::hash_map::key_type & __k) */
  if (strcmp("_ZN9__gnu_cxx8hash_map4findERKT_", fname) == 0) { return INTRN__ZN9__gnu_cxx8hash_map4findERKT_; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::find(const __gnu_cxx::hash_map::key_type & __k) */
  if (strcmp("_ZNK9__gnu_cxx8hash_map4findERKT_", fname) == 0) { return INTRN__ZNK9__gnu_cxx8hash_map4findERKT_; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::count(const __gnu_cxx::hash_map::key_type & __k) */
  if (strcmp("_ZNK9__gnu_cxx8hash_map5countERKT_", fname) == 0) { return INTRN__ZNK9__gnu_cxx8hash_map5countERKT_; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::equal_range(const __gnu_cxx::hash_map::key_type & __k) */
  if (strcmp("_ZN9__gnu_cxx8hash_map11equal_rangeERKT_", fname) == 0) { return INTRN__ZN9__gnu_cxx8hash_map11equal_rangeERKT_; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::equal_range(const __gnu_cxx::hash_map::key_type & __k) */
  if (strcmp("_ZNK9__gnu_cxx8hash_map11equal_rangeERKT_", fname) == 0) { return INTRN__ZNK9__gnu_cxx8hash_map11equal_rangeERKT_; }
  /* __gnu_cxx::hash_map<typename _Key, typename _Tp, typename _Hash, typename _Pred, typename _Alloc>::operator[](const __gnu_cxx::hash_map::key_type & __k) */
  if (strcmp("_ZN9__gnu_cxx8hash_mapixERKT_", fname) == 0) { return INTRN__ZN9__gnu_cxx8hash_mapixERKT_; }
/* end */
