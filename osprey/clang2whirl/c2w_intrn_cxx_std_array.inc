/*
  Copyright (C) 2021 Xcalibyte (Shenzhen) Limited.

  This program is free software; you can redistribute it and/or modify it
  under the terms of version 2 of the GNU General Public License as
  published by the Free Software Foundation.

  This program is distributed in the hope that it would be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  Further, this software is distributed without any warranty that it is
  free of the rightful claim of any third person regarding infringement
  or the like.  Any license provided herein, whether implied or
  otherwise, applies only to this software file.  Patent licenses, if
  any, provided herein do not apply to combinations of this program with
  other software, or any other product whatsoever.

  You should have received a copy of the GNU General Public License along
  with this program; if not, write the Free Software Foundation, Inc., 59
  Temple Place - Suite 330, Boston MA 02111-1307, USA.

  http://www.xcalibyte.com

  For more information, see:
  http://github.com/open64-compiler/open64
  http://gitee.com/open64-compiler/open64

*/


/* auto-generated intrinsics for c++ std_array intrinsic. 2021-10-26 11:56:39 */

  /* std::__1::array<typename _Tp, size_t _Size>::swap(array<_Tp, _Size> & __a) */
  if (strcmp("_ZNSt3__15array4swapERNS_5arrayIT_XT0_EEE", fname) == 0) { return INTRN__ZNSt3__15array4swapERNS_5arrayIT_XT0_EEE; }
  /* std::__1::array<typename _Tp, size_t _Size>::begin() */
  if (strcmp("_ZNSt3__15array5beginEv", fname) == 0) { return INTRN__ZNSt3__15array5beginEv; }
  /* std::__1::array<typename _Tp, size_t _Size>::begin() */
  if (strcmp("_ZNKSt3__15array5beginEv", fname) == 0) { return INTRN__ZNKSt3__15array5beginEv; }
  /* std::__1::array<typename _Tp, size_t _Size>::end() */
  if (strcmp("_ZNSt3__15array3endEv", fname) == 0) { return INTRN__ZNSt3__15array3endEv; }
  /* std::__1::array<typename _Tp, size_t _Size>::end() */
  if (strcmp("_ZNKSt3__15array3endEv", fname) == 0) { return INTRN__ZNKSt3__15array3endEv; }
  /* std::__1::array<typename _Tp, size_t _Size>::rbegin() */
  if (strcmp("_ZNSt3__15array6rbeginEv", fname) == 0) { return INTRN__ZNSt3__15array6rbeginEv; }
  /* std::__1::array<typename _Tp, size_t _Size>::rbegin() */
  if (strcmp("_ZNKSt3__15array6rbeginEv", fname) == 0) { return INTRN__ZNKSt3__15array6rbeginEv; }
  /* std::__1::array<typename _Tp, size_t _Size>::rend() */
  if (strcmp("_ZNSt3__15array4rendEv", fname) == 0) { return INTRN__ZNSt3__15array4rendEv; }
  /* std::__1::array<typename _Tp, size_t _Size>::rend() */
  if (strcmp("_ZNKSt3__15array4rendEv", fname) == 0) { return INTRN__ZNKSt3__15array4rendEv; }
  /* std::__1::array<typename _Tp, size_t _Size>::size() */
  if (strcmp("_ZNKSt3__15array4sizeEv", fname) == 0) { return INTRN__ZNKSt3__15array4sizeEv; }
  /* std::__1::array<typename _Tp, size_t _Size>::max_size() */
  if (strcmp("_ZNKSt3__15array8max_sizeEv", fname) == 0) { return INTRN__ZNKSt3__15array8max_sizeEv; }
  /* std::__1::array<typename _Tp, size_t _Size>::empty() */
  if (strcmp("_ZNKSt3__15array5emptyEv", fname) == 0) { return INTRN__ZNKSt3__15array5emptyEv; }
  /* std::__1::array<typename _Tp, size_t _Size>::operator[](std::__1::array::size_type __n) */
  if (strcmp("_ZNSt3__15arrayixEm", fname) == 0) { return INTRN__ZNSt3__15arrayixEm; }
  /* std::__1::array<typename _Tp, size_t _Size>::operator[](std::__1::array::size_type __n) */
  if (strcmp("_ZNKSt3__15arrayixEm", fname) == 0) { return INTRN__ZNKSt3__15arrayixEm; }
  /* std::__1::array<typename _Tp, size_t _Size>::at(std::__1::array::size_type __n) */
  if (strcmp("_ZNSt3__15array2atEm", fname) == 0) { return INTRN__ZNSt3__15array2atEm; }
  /* std::__1::array<typename _Tp, size_t _Size>::at(std::__1::array::size_type __n) */
  if (strcmp("_ZNKSt3__15array2atEm", fname) == 0) { return INTRN__ZNKSt3__15array2atEm; }
  /* std::__1::array<typename _Tp, size_t _Size>::front() */
  if (strcmp("_ZNSt3__15array5frontEv", fname) == 0) { return INTRN__ZNSt3__15array5frontEv; }
  /* std::__1::array<typename _Tp, size_t _Size>::front() */
  if (strcmp("_ZNKSt3__15array5frontEv", fname) == 0) { return INTRN__ZNKSt3__15array5frontEv; }
  /* std::__1::array<typename _Tp, size_t _Size>::back() */
  if (strcmp("_ZNSt3__15array4backEv", fname) == 0) { return INTRN__ZNSt3__15array4backEv; }
  /* std::__1::array<typename _Tp, size_t _Size>::back() */
  if (strcmp("_ZNKSt3__15array4backEv", fname) == 0) { return INTRN__ZNKSt3__15array4backEv; }
  /* std::__1::array<typename _Tp, size_t _Size>::data() */
  if (strcmp("_ZNSt3__15array4dataEv", fname) == 0) { return INTRN__ZNSt3__15array4dataEv; }
  /* std::__1::array<typename _Tp, size_t _Size>::data() */
  if (strcmp("_ZNKSt3__15array4dataEv", fname) == 0) { return INTRN__ZNKSt3__15array4dataEv; }
/* end */
